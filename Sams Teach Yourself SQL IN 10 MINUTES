Sams Teach yourself SQL IN 10 MINUTES

LESSON 1

DATABASE: It is a collection of data stored in some organized fashion. A container to store organized data. 
DBMS - Database Management System: Database software is called DBMS where we can create and manipulate data.
TABLE: A structured list of data of a specific type. Ex: List of customers or any list of information. Every table has a name and it is unique in the database.
SCHEMA: Information about the database and table layput and its properties. 
        These include information about what data may be stored, how it is broken up, how individual pieces of information are named.
COLUMN: Tables are made up of columns. A single field in a table. All tables are made up of one or more columns. Each column has an associated DataType. 
        A datatype define what type of data the column can contain.
ROW: Data in table is stored in rows. Each record in a table is row.(Rows or Records)

Primary Keys: A column whose values uniquely identify every row in a table. It is not actually required to have a primary key 
              but designers ensure that every table they create has a primary key so that the future data manipulation is possible and manageable.
              -> No two rows should have the same primary key value
              -> Every row must have the value in the primary key columns (No Null values)
              -> Values in Primary Key columns should never be modified or updated
              -> Primary key values should never be reused. (If row is deleted form the table, Its primary key may not be assigned to any new rows in the future)
      
SQL: Structured Query Language designed specifically for communicating with databases. It is very easy to learn. MySQL -> DBMS

 

LESSON 2 - Retriving Data

SELECT: Its purpose is to retrive information from one or more tables.

DISTINCT: Only return Distinct/Unique values in the column.

LIMIT: To limit the results to top 10 rows or 5 rows
OFFSET

Comments: Inline and Multi Line
USE sql_sams;

SELECT * FROM customers;

/* Retrieve Single column*/
SELECT prod_name
FROM Products; 

/* Retrieve Multiple columns*/
SELECT prod_id, prod_name, prod_price 
FROM products;

/* Retrieve All columns using Asterisk(*) wild card character*/
SELECT *
FROM products;

/* Retrieve vendors Id from products */
SELECT vend_id
FROM products;

/* Retrieving Distinct(unique) Rows */
/* To get DISTINCT Vendors (Rows) use DISTINCT Keyword */
SELECT DISTINCT(vend_id)
FROM products;

SELECT vend_id, prod_price FROM products;
SELECT DISTINCT vend_id, prod_price FROM products;

/* LIMIT */
SELECT prod_name FROM products LIMIT 5;

/* We can also set where to strat can give 5 rows of data */
/* It strats from 4 and gives upto 8 (4,5,6,7,8)*/
SELECT prod_name FROM products LIMIT 5 OFFSET 3; 

/* We can also use the short hand version by combing limit and offset */
/* here the first number is offset - where to strat from and second number is limit - how many rows to retrive */
SELECT prod_name FROM products LIMIT 3,5; 

#comments  - In line comment

#Challanges in lesson 2

#1 Write a SQL statement to retrieve all customer ids (cust_id) from the Customers table.
SELECT cust_id FROM customers;

#2 The OrderItems table contains every item ordered (and some were ordered multiple times). 
   Write a SQL statement to retrieve a list of the products (prod_id) ordered (not every order, just a unique list of products). 
   Hereâ€™s a hint, you should end up with seven unique rows displayed.
SELECT DISTINCT prod_id FROM orderitems;

#3 Write a SQL statement that retrieves all columns from the Customers table, and an alternate SELECT that retrieves just the customer id. 
   Use comments to comment out one SELECT so as to be able to run the other. (And of course, test both statements).
/*
SELECT * FROM customers;
*/
SELECT cust_id FROM customers;






